
__ALGEMEEN
Vier spaties als indentatie.
Gebruik += 1 en niet ++.
Schrijf niet x == true of x == false maar (x) of (!x).
Gebruik zo min mogelijk globale variabelen (die in Defines.ts staan)
Altijd spaties wanneer er curly braces {} geschreven worden.

Dus niet

    getPosition() {return {x:this._x, y:this._y};}

Maar

    getPosition() { return { x: this._x, y: this._y }; }

Gebruik ook spaties na de key (x: en y: in dit geval).

!! Schrijf zo veel mogelijk COMMENTS bij je functies, methodes en classes. Dit voorkomt hoofdpijn voor anderen en jezelf
in de toekomst. Schrijf ze in het Engels!



__VARIABELEN
Probeer de naam zo omschrijvend mogelijk te maken.
Niet

    var x:number = ...;

Maar

    var isAnEvilLookingBanana():boolean = true;


Geef elke variabele die je maakt een data type.

    var a:number = 69,
        b:string = "here comes";

Wanneer je meerdere variabelen maakt, schrijf ze niet zo

    var a:number = 420;
    var b:string = "dat boi";

In plaats daarvan, schrijf maar één keer var en verdeel de regels met een komma

    var a:number = 322,
        b:string = "o shit waddup";



__CONTROL STRUCTURE
Breek lange && en || condities in aparte regels.
Gebruik altijd curly braces {} bij if/else statements, zelfs als ze één regel lang zijn.

    Voorbeelden

    if (...) {  }

    if (...) {
    } else if (...) {
    } else {
    }

    while (...) {
    }

    do {
    } while (...);

    for (...; ...; ...) {
    }



__CLASSES
Begin de class naam met een HOOFDLETTER.
Start de curly braces {} op een aparte regel voor een class.

    Voorbeeld

    class MyClass extends MyParentClass
    {
        ...
    }

Namen voor functions schrijf je uit als lowerCamelCase, dus eerste letter is GEEN hoofdletter.
Namen voor variabelen schrijf je ook uit als lowerCamelCase.
Namen voor fields (class variabelen) beginnen met een underscore (_).
Fields moeten zoveel mogelijk als private geinitialiseerd worden.
Kleine functies en constructors kunnen uitgeschreven worden op één regel.
Grotere functies beginnen hun curly braces {} op een nieuwe regel.
functions bevatten altijd een return type achter hun naam.

    Voorbeelden

    // field
    private _thisIsAClassVariable:number;

    // kleine constructor op één regel. Vergeet de spatie na () niet.
    constructor() { }

    // langere constructor
    constructor()
    {
        ...
    }

    // kleine functie
    tinyFunction():number { return x; }

    // grotere functie
    largerFunction():string
    {
        ...
        return str;
    }

    // functie die niks returned
    functionWithoutReturnValue():void
    {
        ...
    }